extends layout 

block content 
  h1= title 

  form(method='POST' action='')
    div(class="accordion mt-15" id="accordionExample")
      div(class="accordion-item")
        h2(class="accordion-header")
          button(class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne") Basic Info (required)

        div(id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample")
          div(class="accordion-body")
            .form-group 
              label(for='name') Name:
              input#name.form-control.border(type='text' placeholder='Item Name' name='name' value=(undefined===item ? '' : item.name) required)
            .form-group
              label(for='effect') Effect:
              input#effect.form-control.border(type='text' placeholder='Item Effect' name='effect' value=(undefined===item ? '' : item.effect) required)
            .form-group 
              label(for='rarity') Rarity:
              select#rarity.form-control.border(name='rarity' required)
                option(value='' selected disabled) Select Rarity
                for rarity in allRarity 
                    option(value=rarity.name selected=(rarity.checked ? true : false)) #{rarity.name.charAt(0).toUpperCase() + rarity.name.slice(1)}
            .form-group 
              label(for='type') Type:
              select#type.form-control.selectpicker.border.border-secondary-subtle(name='type' data-live-search='true' data-actions-box="true" placeholder='Select Type(s)' multiple required)
                for aType in allType 
                  option(value=aType.name selected=(aType.checked ? true : false)) #{aType.name.charAt(0).toUpperCase() + aType.name.slice(1)}
            .form-group 
              label(for='cost') Cost:
              input#cost.form-control.border(type='number' name='cost' min=0 value=(undefined===item ? '' : item.cost) required)

      div(class="accordion-item")
        h2(class="accordion-header")
          button(class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo") Sockets

        div(id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample")
          div(class="accordion-body")
            .form-group 
              label(for='sockets') Sockets:
              input#sockets.form-control.border(type='number' name='sockets' min=0 value=(undefined===item ? '' : item.sockets))
              
      div(class="accordion-item")
        h2(class="accordion-header")
          button(class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree") Weapon details

        div(id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample")
          div(class="accordion-body")
            .form-group 
              label(for='accuracy') Accuracy:
              .input-group
                input#accuracy.form-control.border(type='number' name='accuracy' min=0 value=(undefined===item ? '' : item.accuracy))
                span#end-input-text.input-group-text %

            .form-group
              label.form-label(for='damage') Damage:
              .input-group
                input#min-damage.form-control(type='number' placeholder='min' name='min-damage' min=0 max=50 value=(undefined===item ? '' : item.min_damage))
                span#middle-input-text.input-group-text -
                input#max-damage.form-control(type='number' placeholder='max' name='max-damage' min=0 max=50 value=(undefined===item ? '' : item.max_damage))
            
            .form-group 
              label(for='cooldown') Cooldown:
              .input-group
                input#cooldown.form-control.border(type='number' name='cooldown' min=0 value=(undefined===item ? '' : item.cooldown))
                span#end-input-text.input-group-text sec

            .form-group 
              label(for='stamina') Stamina cost:
              input#stamina.form-control.border(type='number' name='stamina' min=0 value=(undefined===item ? '' : item.stamina))

      div(class="accordion-item")
        h2(class="accordion-header")
          button(class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour") Class and Recipes

        div(id="collapseFour" class="accordion-collapse collapse" data-bs-parent="#accordionExample")
          div(class="accordion-body")
            .form-group 
              label(for='of_class') Class: 
              select#of_class.form-control.border(name='of_class' aria-label="Default select example")
                option(value='' selected) Select Class if necessary
                for aClass in allClass 
                  option(value=aClass.name selected=(aClass.checked ? true : false)) #{aClass.name.charAt(0).toUpperCase() + aClass.name.slice(1)}
            .form-group 
              label(for='requires') Required Items: 
              select#requires.form-control.selectpicker.border(name= 'requires' data-live-search='true' data-actions-box="true" placeholder='Optional' multiple)
                for item in allItem 
                  option(value=item.name selected=(item.prevRequires ? true : false)) #{item.name}
            .form-group 
              label(for='used_in_recipe') Used in Recipe: 
              select#used_in_recipe.form-control.selectpicker.border(name='used_in_recipe' data-live-search='true'  data-actions-box="true" placeholder='Optional' multiple)
                for item in allItem 
                  option(value=item.name selected=(item.prevUsed ? true : false)) #{item.name}
    
      button.btn.btn-primary.mt-15(type='submit' onClick=removeClassNameFromDoc) Submit 

  if errors 
    div.mt-2
      ul
        for error in errors 
          li!= error.msg